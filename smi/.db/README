
dbabstracter4php 

---------------------------------------------------------------
Author Cal Woodruff cwoodruf@gmail.com
Licensed under the Perl Artistic License version 2.0
http://www.perlfoundation.org/attachment/legal/artistic-2_0.txt
---------------------------------------------------------------

Object oriented wrapper for database operations.

It is intended to be easy to port and extend.

Works with php 5.2, will probably work with php 5.3.

To use save the dbabstracter code to a directory and include the rdbms specific
library for your database and the common library. For example:

 <?php
 // you define this must contain a schema array and a db array see
 // example-schema.php in svn
 require_once("my-schema.php"); 
 require_once(".dbabstracter/abstract-mysql.php");
 require_once(".dbabstracter/abstract-common.php");

 // define some table related classes here
 class MyEntity extends Entity {
     function __construct() {
	 global $schema, $db;
	 parent::__construct($db,$schema,'myentity');
     }
 }

 class MyRelation extends Relation {
     function __construct() {
	 global $schema, $db;
	 parent::__construct($db,$schema,'myrelation');
     }
 }
 ?>

Currently only mysql is supported. However, it should be relatively easy to port to
another rdbms.

This will define the Entity and Relation classes that you can then map to tables.
For this to work you need to create two php arrays $tables with schema information
and a $db array with login information for the database. An example is included in
the svn tree.

Relation differs from Entity in that a relation has a multiple field key.

The operations: ins, upd, del, getone, getall are currently defined.

Feel free to run your own queries with the "run" method. This method works similar
to sprintf in that you have a query string and then a variable length list of fields
that can be inserted into the query string using standard printf syntax.

